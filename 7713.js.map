{"version":3,"file":"7713.js","mappings":"gKAKA,MAAMA,E,SAAgC,gBAGpCA,EAAiBC,YAAc,mBAGjC,W,8NCVO,SAASC,EAAyBC,GACvC,OAAO,EAAAC,EAAA,GAAqB,eAAgBD,GAE9C,MACA,GADyB,E,SAAA,GAAuB,eAAgB,CAAC,S,eCFjE,MAAME,EAAY,CAAC,YAAa,aAqB1BC,GAAgB,EAAAC,EAAA,IAAO,QAAS,CACpCC,KAAM,eACNL,KAAM,OACNM,kBAAmB,CAACC,EAAOC,IAAWA,EAAOC,MAHzB,CAInB,CACDC,QAAS,uBAELC,EAAY,CAChBC,QAAS,QAELC,EAAmB,QACnBC,EAAyB,cAAiB,SAAmBC,EAASC,GAC1E,MAAMT,GAAQ,EAAAU,EAAA,GAAc,CAC1BV,MAAOQ,EACPV,KAAM,kBAGF,UACJa,EAAS,UACTC,EAAYN,GACVN,EACEa,GAAQ,OAA8Bb,EAAOL,GAE7CmB,GAAa,OAAS,GAAId,EAAO,CACrCY,UAAAA,IAGIG,EArCkBD,CAAAA,IACxB,MAAM,QACJC,GACED,EAIJ,OAAO,EAAAE,EAAA,GAHO,CACZd,KAAM,CAAC,SAEoBV,EAA0BuB,IA8BvCE,CAAkBH,GAClC,OAAoB,SAAKxB,EAAA,WAA2B,CAClD4B,MAAOd,EACPe,UAAuB,SAAKvB,GAAe,OAAS,CAClDwB,GAAIR,EACJD,WAAW,OAAKI,EAAQb,KAAMS,GAC9BF,IAAKA,EACLY,KAAMT,IAAcN,EAAmB,KAAO,WAC9CQ,WAAYA,GACXD,SAGiCN,EAAUe,UAEhD,CASAH,SAAU,SAKVJ,QAAS,WAKTJ,UAAW,WAMXC,UAAW,gBAKXW,GAAI,cAAoB,CAAC,YAAkB,cAAoB,CAAC,SAAgB,WAAkB,YAAmB,SAAgB,cAEvI","sources":["webpack://@mailonline/mol-ads-config-ui/./node_modules/@mui/material/Table/Tablelvl2Context.js","webpack://@mailonline/mol-ads-config-ui/./node_modules/@mui/material/TableHead/tableHeadClasses.js","webpack://@mailonline/mol-ads-config-ui/./node_modules/@mui/material/TableHead/TableHead.js"],"sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst Tablelvl2Context = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\n\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;"],"names":["Tablelvl2Context","displayName","getTableHeadUtilityClass","slot","generateUtilityClass","_excluded","TableHeadRoot","styled","name","overridesResolver","props","styles","root","display","tablelvl2","variant","defaultComponent","TableHead","inProps","ref","useThemeProps","className","component","other","ownerState","classes","composeClasses","useUtilityClasses","value","children","as","role","propTypes","sx"],"sourceRoot":""}